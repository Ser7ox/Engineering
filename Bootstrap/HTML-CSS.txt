HTML
1. In quali punti di un documento HTML è possibile inserire il tag "script"?

1. Il tag script si inserisce solitamente alla fine della chiusura del tag body. Se si inserisse all'interno si interromperebbe l'analisi del codice perché il browser richiederebbe il file di script per poi eseguirlo, causando rallentamenti nel caricamento della pagina.

2. Cos'è l' HTML5 Web Storage? Spiegare a cosa servono localStorage e sessionStorage e la differenza tra essi.

2. Il Web Storage è un meccanismo alternativo ai cookies. Quest'ultimo permette di gestire i dati in modo più semplice e funzionale. localStorage permette , come dice anche il termine local, di accumulare le informazioni localmente. Questo permette di tenere i dati memorizzati per un tempo indefinito, fino a che non si decide di eliminarli.
sessionStorage invece fa l'opposto: tiene i dati fino a che non viene effettuata la chiusura della finestra del web browser. Con la chiusura vengono cancellati tutti i dati accumulati.

3. A cosa serve il tag "iframe"?


3. Il tag <iframe> serve per caricare nella tua pagina HTML il contenuto di un'altra pagina HTML.
La sintassi è la seguente: <iframe src="index.html" width="" height ""></iframe>.

4. Cosa sono i tag vuoti? Fornire degli esempi.

4.I tag vuoti sono quei tag che non prevedono la chiusura come succede ad esempio con quello descritto sopra: <iframe> .... </iframe>.
Ad esempio, il tag <br> che serve per andare a capo non prevede un tag di chiusura. Anche il tag <img src= "aaa.jpg"> utilizzato per inserire un'immagine non prevede chiusura.

5. Creare un form in cui sono presenti i seguenti input:
	-Nome, con contenuto "Marco" in sola lettura
	-Cognome, in cui è possibile inserire al massimo 15 caratteri
	-Telefono, obbligatorio e in cui è è possibile inserire solamente 10 cifre numeriche
	-Indirizzo, con contenuto "Via Nazionale 14" e disabilitato

5. <!doctype html>
<html>
    <style>
        .form1 {text-align: center; }
        p { font-size: 30px; }
    </style>
    <head>
        <meta charset="UTF-8">
        <title> Esercizio </title>
    </head>
    <body>
        <form class="form1" method="post" name="dati">
            <input value="Marco" type="text" name="nome" placeholder="Nome" readonly>
            <input type="text" name="surname" placeholder="Cognome" maxlength="15">
            <input type="text" name="cell" placeholder="Telefono" pattern espressioni regolari required>
            <input value="Via Nazionale 14" type="text" name="address" placeholder="Indirizzo" disabled>
            <button type="submit"> Invia i dati </button>
        </form>
    </body>
</html>

6. È possibile inserire un tag "div" in un tag "p"? Perché?

6. Si può scrivere: 
<div> 
	<p> ciao </p>
</div>
ma non si può scrivere il contrario, cioè: 
<p>
	<div> 
	</div>
</p>
perché <p> non può contenere elementi a livello di blocco, in questo caso <div>.





CSS
1. Indicare 3 modi per nascondere il contenuto di un elemento e la differenza tra essi.

1. Il primo modo è utilizzando display:none; anche se non viene utilizzato molto perché può causare problemi. visibility hidden
Il secondo modo è utilizzando la tecnica off-left che permette di posizionare l'elemento al di fuori, ovvero: screen reader
.off-left {
  position:absolute;
  left:-9999px;
}
Il terzo modo è utilizzando il codice css opacity:0; screen reader

2. A cosa serve la proprietà "padding"? Che valori le possono essere assegnati?

2. La proprietà padding è usata per creare spazio intorno a un elemento specifico. Si può dare il padding-top, bottom, left e right. Questo ti permette di decidere di avere magari un padding-top: 10 px; e un padding-bottom: 20px; a seconda delle preferenze.
Un modo più semplice per mettere top right bottom e left in un'unica riga di codice è scrivere: 
padding: 10px 15px 20px 25px; <---- questo permette di avere padding top 10px, right 15px e così via in senso orario. 

rem, em da approfondire 

3. Qual è la differenza tra "div .example" e "div > .example"?

3.  div .example { text-align: center; } significa che tutti gli elementi con la classe "example" all'interno di un div avranno il testo allineato al centro.

div > .example {text-align:center; } fa la stessa cosa di sopra, ma lo fa sull'elemento che è a contatto diretto con il div. 
Quindi se ad esempio avessimo:

<div>
<p class="example"> Ciao </p>
</div>

</div>
<a><p class="example"> Addio </p></a>
</div>

In questo caso verrebbe allineato il testo solo del primo div (quindi la scritta "Ciao") dato che l'elemento p con classe example è a diretto contatto con div, mentre sul secondo div il tag <p> ha prima il tag <a>, pertanto il text-align non verrà applicato sulla scritta "Addio".

4. Indicare 2 modi differenti per cambiare il colore del testo presente nel secondo tag "p" senza modificare l'HTML.

<div class="box">
  <p>Paragraph example.</p>
  <p>Paragraph example.</p>
</div>

4. 1° metodo: p { color:red} 
   2° metodo: * { color: red}
	p: lastchild 
	p + p 

5. Dato questo HTML:

<h2>Title</h2>
<span>This is a span.</span>

Utilizzando un selettore CSS, spostare in basso il tag "span" della quantità desiderata ed inserirlo in un rettangolo di colore verde che si estende per tutta la dimensione della riga.


5. <!DOCTYPE html>
<html>
<style>
div {
  padding: 20px;
  border: 3px solid green;
  margin-top:200px;
}
</style>
<head>
<meta charset="UTF-8">
</head>
<body>

    <h2>Title</h2>
    <div>
        <span>This is a span.</span>
    </div>
    

</body>
</html>

6. Indicare quali valori può assumere la proprietà "position" e fornire degli esempi.

6.  Può assumere 5 valori diversi la proprietà position:
1) static si adatta in base al flow della pagina html, si posiziona in modo normale. Qui le proprietà top bottom ecc non hanno effetto.
2) relative segue la posizione normale ma le proprietà top bottom left e right sono utilizzate se vengono specificate.
3) absolute posiziona l'elemento a quello precedente più vicino.
4) fixed permette di lasciare lo specifico elemento in quel posto anche se viene modificata la grandezza della finestra, anche quando scorriamo la pagina.
5) sticky utilizzato ad esempio per menù di navigazione, quindi per elementi che devono stare fissi in una posizione. Quindi quando scrollo verso il basso, grazie a sticky posso decidere di tenere fisso il menù di navigazione in alto.



HTML/CSS
(1) Realizzare una top navbar con le seguenti voci: Home, News, Contact, About.

(1) Per una questione di comodità ho inserito il tag <style> con il css:

<!DOCTYPE html>
<html>
    <style>
        html,body{height:100%; font-family: Verdana;}
        body{background: #fff; margin: 0px; padding: 0px;}
        .header { background: #333; position: fixed; z-index:100; width:100%; height: 48px;}
        .header_menu{text-align:center;  padding:0;}
        .header_menu_item{display: inline-block;}
        .header_menu_item a{color:#fff; display:block; font-size: 18px; margin-left: 10px; margin-right: 10px; margin-top: -7px; opacity:0.7; text-decoration:none;}
        .header_menu_item a:hover {opacity:1.0}
        .cover{background: #000; width: 100%; height: 100%; opacity: 0.4;}

        </style>
<head>
<meta charset="UTF-8">
</head>
    <body>
        <nav class="header">
            <ul class="header_menu">
                <li class="header_menu_item"><a href="index.html">Home</a></li>
                <li class="header_menu_item"><a href="index.html">News</a></li>
                <li class="header_menu_item"><a href="index.html">Contact</a></li>
                <li class="header_menu_item"><a href="index.html">About</a></li>
            </ul>
        </nav>
    	
            <div class="cover"></div>
                    
            
        

</body>
</html>

(2) Realizzare una pagina relativa ad un rubrica contenente:
	- Un campo di input per la ricerca dei contatti
	- Una tabella con le seguenti colonne: Nome, Cognome, Telefono, Indirizzo ed Azioni. Nell'ultima colonna inserire dei pulsanti per la modifica e la rimozione di un contatto.
Per lo stile fai tu, basta che (1) e (2) siano carini :)

(2)

Allego file con foto



56.
Api di comunicazione

Storage api
promise
Funzioni asincrone con async
Browser api
Per le regexp sito regexr per esercitarti


